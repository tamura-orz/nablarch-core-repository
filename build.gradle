group = 'com.nablarch.framework'
version = '1.1.0'
description = 'リポジトリ'

buildscript {
  repositories {
    mavenLocal()
    maven { url "${developLibUrl}" }
    jcenter()
  }
  dependencies {
    classpath "com.nablarch.dev:nablarch-gradle-plugin:${nablarchGradlePluginVersion}"
    classpath "net.saliman:gradle-cobertura-plugin:2.4.0"
  }
}

apply plugin: 'com.nablarch.dev.nablarch-build'
apply plugin: 'com.nablarch.dev.nablarch-maven-deploy'
apply plugin: 'com.nablarch.dev.nablarch-sonarqube'
apply plugin: 'cobertura'
apply plugin: 'com.nablarch.dev.nablarch-version'

// ビルド時のJavaバージョンを指定する
sourceCompatibility=JavaVersion.VERSION_1_6
targetCompatibility=JavaVersion.VERSION_1_6


configurations {
  all*.exclude module: 'nablarch-test-support-hereis'
  all*.exclude module: 'h2'
  all*.exclude module: 'commons-dbcp'
  all*.exclude module: 'eclipselink'
  all*.exclude module: 'jsp-api-2.1-glassfish'
}

dependencies {
  compile "com.nablarch.framework:nablarch-core:1.3.1"

  testCompile "com.nablarch.framework:nablarch-core-applog:${nablarchCoreApplogVersion}"
  testRuntime 'org.slf4j:slf4j-nop:1.7.24'
}

test {
  ignoreFailures = true

  jvmArgs (
      '-XX:+UseParallelGC',
      '-Dfile.encoding=UTF-8'
  )

  cobertura {
    coverageSourceDirs = ["${projectDir}/src/main/java/"]
    coverageFormats = ['xml']
    coverageDirs = [project.sourceSets.main.output.classesDir]
  }
}

task coverage(dependsOn: ['clean', 'generateCoberturaReportByAnt'])

def coberturaReportDir = new File(project.buildDir, "cobertura-report")

task generateCoberturaReportByAnt(dependsOn: 'cobertura') {
  def dataFile = "${project.buildDir}/cobertura/cobertura.ser"

  inputs.file file(dataFile)
  outputs.dir coberturaReportDir

  doLast {
    ant {
      taskdef(resource: 'tasks.properties',
          classpath: configurations.cobertura.asPath + ':' + configurations.testRuntime.asPath)

      'cobertura-report'(
          destdir: coberturaReportDir,
          datafile: dataFile,
          srcdir: "${projectDir}/src/main/java/",
          format: 'xml'
      )
    }
  }
}

sonarRunner {
  sonarProperties {
    property "sonar.java.coveragePlugin", "cobertura"
    property "sonar.cobertura.reportPath", "${coberturaReportDir}/coverage.xml"
  }
}

tasks.sonarRunner {
  dependsOn = ['coverage']
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.13'
}

